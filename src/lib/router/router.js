import NotFound from '../../components/error/NotFound.svelte'

import { routes } from './routes'
import { goto } from '$app/navigation'
import { writable } from 'svelte/store'
import { empty } from '../helper/utils'
import { getAuthenticatedUserRoles } from '../helper/auth'
import { kebabToBeautifulCase, beautifulToSnakeCase } from '$lib/helper/strUtils'


let history = []
let currentHistoryIndex = -1

let routesDisplays = {
    home: {
        slugs: ["Home"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none"><path d="M6.66667 14.1668H13.3333M9.18141 2.30345L3.52949 6.69939C3.15168 6.99324 2.96278 7.14017 2.82669 7.32417C2.70614 7.48716 2.61633 7.67078 2.56169 7.866C2.5 8.08639 2.5 8.3257 2.5 8.80433V14.8334C2.5 15.7669 2.5 16.2336 2.68166 16.5901C2.84144 16.9037 3.09641 17.1587 3.41002 17.3185C3.76654 17.5001 4.23325 17.5001 5.16667 17.5001H14.8333C15.7668 17.5001 16.2335 17.5001 16.59 17.3185C16.9036 17.1587 17.1586 16.9037 17.3183 16.5901C17.5 16.2336 17.5 15.7669 17.5 14.8334V8.80433C17.5 8.3257 17.5 8.08639 17.4383 7.866C17.3837 7.67078 17.2939 7.48716 17.1733 7.32417C17.0372 7.14017 16.8483 6.99324 16.4705 6.69939L10.8186 2.30345C10.5258 2.07574 10.3794 1.96189 10.2178 1.91812C10.0752 1.87951 9.92484 1.87951 9.78221 1.91812C9.62057 1.96189 9.47418 2.07574 9.18141 2.30345Z" stroke="#667085" stroke-width="1.66667" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    },
    reports: {
        slugs: ["Reports"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none"><path d="M9.99984 13.3333V17.5M9.99984 13.3333L14.9998 17.5M9.99984 13.3333L4.99984 17.5M17.4998 2.5V9.33333C17.4998 10.7335 17.4998 11.4335 17.2274 11.9683C16.9877 12.4387 16.6052 12.8212 16.1348 13.0608C15.6 13.3333 14.9 13.3333 13.4998 13.3333H6.49984C5.09971 13.3333 4.39964 13.3333 3.86486 13.0608C3.39446 12.8212 3.012 12.4387 2.77232 11.9683C2.49984 11.4335 2.49984 10.7335 2.49984 9.33333V2.5M6.6665 7.5V10M9.99984 5.83333V10M13.3332 9.16667V10M18.3332 2.5H1.6665" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    },
    scheduled_messages: {
        slugs: ["Scheduled Messages"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none"><path d="M18.9166 9.58333L17.2505 11.25L15.5833 9.58333M17.4542 10.8333C17.4845 10.5597 17.5 10.2817 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 14.1421 5.85786 17.5 10 17.5C12.3561 17.5 14.4584 16.4136 15.8333 14.7144M10 5.83333V10L12.5 11.6667" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    },
    groups: {
        slugs: ["Groups"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none"><path d="M18.3332 17.5V15.8333C18.3332 14.2801 17.2709 12.9751 15.8332 12.605M12.9165 2.7423C14.1381 3.23679 14.9998 4.43443 14.9998 5.83333C14.9998 7.23224 14.1381 8.42988 12.9165 8.92437M14.1665 17.5C14.1665 15.9469 14.1665 15.1703 13.9128 14.5577C13.5745 13.741 12.9255 13.092 12.1088 12.7537C11.4962 12.5 10.7196 12.5 9.1665 12.5H6.6665C5.11337 12.5 4.3368 12.5 3.72423 12.7537C2.90747 13.092 2.25855 13.741 1.92024 14.5577C1.6665 15.1703 1.6665 15.9469 1.6665 17.5M11.2498 5.83333C11.2498 7.67428 9.75745 9.16667 7.9165 9.16667C6.07555 9.16667 4.58317 7.67428 4.58317 5.83333C4.58317 3.99238 6.07555 2.5 7.9165 2.5C9.75745 2.5 11.2498 3.99238 11.2498 5.83333Z" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    },
    sms_templates: {
        slugs: ["SMS Templates"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none"><path d="M6.25 10H6.25833M10 10H10.0083M13.75 10H13.7583M10 17.5C14.1421 17.5 17.5 14.1421 17.5 10C17.5 5.85786 14.1421 2.5 10 2.5C5.85786 2.5 2.5 5.85786 2.5 10C2.5 10.9976 2.69478 11.9497 3.04839 12.8204C3.11606 12.9871 3.1499 13.0704 3.165 13.1377C3.17976 13.2036 3.18516 13.2524 3.18517 13.3199C3.18518 13.3889 3.17265 13.4641 3.14759 13.6145L2.65344 16.5794C2.60169 16.8898 2.57582 17.0451 2.62397 17.1573C2.66611 17.2556 2.7444 17.3339 2.84265 17.376C2.95491 17.4242 3.11015 17.3983 3.42063 17.3466L6.38554 16.8524C6.53591 16.8273 6.61109 16.8148 6.68011 16.8148C6.74763 16.8148 6.79638 16.8202 6.86227 16.835C6.92962 16.8501 7.01294 16.8839 7.17958 16.9516C8.05025 17.3052 9.00238 17.5 10 17.5ZM6.66667 10C6.66667 10.2301 6.48012 10.4167 6.25 10.4167C6.01988 10.4167 5.83333 10.2301 5.83333 10C5.83333 9.76988 6.01988 9.58333 6.25 9.58333C6.48012 9.58333 6.66667 9.76988 6.66667 10ZM10.4167 10C10.4167 10.2301 10.2301 10.4167 10 10.4167C9.76988 10.4167 9.58333 10.2301 9.58333 10C9.58333 9.76988 9.76988 9.58333 10 9.58333C10.2301 9.58333 10.4167 9.76988 10.4167 10ZM14.1667 10C14.1667 10.2301 13.9801 10.4167 13.75 10.4167C13.5199 10.4167 13.3333 10.2301 13.3333 10C13.3333 9.76988 13.5199 9.58333 13.75 9.58333C13.9801 9.58333 14.1667 9.76988 14.1667 10Z" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    },
    senders: {
        slugs: ["Senders"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M12.0005 19.0003V12.0003M12.292 19.085L19.2704 21.4212C19.8173 21.6043 20.0908 21.6958 20.2594 21.6301C20.4059 21.5731 20.517 21.4505 20.5594 21.2992C20.6082 21.1249 20.4903 20.8617 20.2545 20.3354L12.766 3.62269C12.5354 3.10799 12.4201 2.85064 12.2594 2.7709C12.1199 2.70162 11.956 2.70136 11.8162 2.77019C11.6553 2.84941 11.5392 3.10639 11.3069 3.62035L3.75244 20.3364C3.51474 20.8623 3.39589 21.1253 3.44422 21.2998C3.48619 21.4513 3.59697 21.5742 3.74329 21.6317C3.91178 21.6978 4.18567 21.6069 4.73346 21.4251L11.786 19.0843C11.8799 19.0532 11.9268 19.0376 11.9749 19.0314C12.0175 19.026 12.0606 19.026 12.1032 19.0316C12.1512 19.0379 12.1981 19.0536 12.292 19.085Z" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    },
    documents: {
        slugs: ["Documents"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M20.5 8V16.2C20.5 17.8802 20.5 18.7202 20.173 19.362C19.8854 19.9265 19.4265 20.3854 18.862 20.673C18.2202 21 17.3802 21 15.7 21H8.3C6.61984 21 5.77976 21 5.13803 20.673C4.57354 20.3854 4.1146 19.9265 3.82698 19.362C3.5 18.7202 3.5 17.8802 3.5 16.2V8M3.6 3H20.4C20.9601 3 21.2401 3 21.454 3.10899C21.6422 3.20487 21.7951 3.35785 21.891 3.54601C22 3.75992 22 4.03995 22 4.6V6.4C22 6.96005 22 7.24008 21.891 7.45399C21.7951 7.64215 21.6422 7.79513 21.454 7.89101C21.2401 8 20.9601 8 20.4 8H3.6C3.03995 8 2.75992 8 2.54601 7.89101C2.35785 7.79513 2.20487 7.64215 2.10899 7.45399C2 7.24008 2 6.96005 2 6.4V4.6C2 4.03995 2 3.75992 2.10899 3.54601C2.20487 3.35785 2.35785 3.20487 2.54601 3.10899C2.75992 3 3.03995 3 3.6 3ZM9.6 11.5H14.4C14.9601 11.5 15.2401 11.5 15.454 11.609C15.6422 11.7049 15.7951 11.8578 15.891 12.046C16 12.2599 16 12.5399 16 13.1V13.9C16 14.4601 16 14.7401 15.891 14.954C15.7951 15.1422 15.6422 15.2951 15.454 15.391C15.2401 15.5 14.9601 15.5 14.4 15.5H9.6C9.03995 15.5 8.75992 15.5 8.54601 15.391C8.35785 15.2951 8.20487 15.1422 8.10899 14.954C8 14.7401 8 14.4601 8 13.9V13.1C8 12.5399 8 12.2599 8.10899 12.046C8.20487 11.8578 8.35785 11.7049 8.54601 11.609C8.75992 11.5 9.03995 11.5 9.6 11.5Z" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    },
    api: {
        slugs: ["API"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M17 17L22 12L17 7M7 7L2 12L7 17M14 3L10 21" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    },
    support: {
        slugs: ["Support"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"><path d="M9.13626 9.13628L4.92893 4.92896M4.92893 19.0711L9.16797 14.8321M14.8611 14.8638L19.0684 19.0711M19.0684 4.92896L14.8287 9.16862M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12ZM16 12C16 14.2091 14.2091 16 12 16C9.79086 16 8 14.2091 8 12C8 9.79086 9.79086 8 12 8C14.2091 8 16 9.79086 16 12Z" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    },
    billings_history: {
        slugs: ["Billings History"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none"><path d="M18.3332 7.08398H1.6665M1.6665 10.4173H4.62207C5.07223 10.4173 5.29731 10.4173 5.51495 10.4561C5.70813 10.4905 5.89659 10.5476 6.07643 10.6261C6.27904 10.7146 6.46631 10.8394 6.84087 11.0891L7.32547 11.4122C7.70003 11.6619 7.8873 11.7867 8.08992 11.8752C8.26975 11.9537 8.45821 12.0108 8.65139 12.0452C8.86904 12.084 9.09411 12.084 9.54427 12.084H10.4554C10.9056 12.084 11.1306 12.084 11.3483 12.0452C11.5415 12.0108 11.7299 11.9537 11.9098 11.8752C12.1124 11.7867 12.2996 11.6619 12.6742 11.4122L13.1588 11.0891C13.5334 10.8394 13.7206 10.7146 13.9232 10.6261C14.1031 10.5476 14.2915 10.4905 14.4847 10.4561C14.7024 10.4173 14.9274 10.4173 15.3776 10.4173H18.3332M1.6665 6.00065L1.6665 14.0006C1.6665 14.9341 1.6665 15.4008 1.84816 15.7573C2.00795 16.0709 2.26292 16.3259 2.57652 16.4857C2.93304 16.6673 3.39975 16.6673 4.33317 16.6673L15.6665 16.6673C16.5999 16.6673 17.0666 16.6673 17.4232 16.4857C17.7368 16.3259 17.9917 16.0709 18.1515 15.7573C18.3332 15.4008 18.3332 14.9341 18.3332 14.0007V6.00065C18.3332 5.06723 18.3332 4.60052 18.1515 4.244C17.9917 3.9304 17.7368 3.67543 17.4232 3.51564C17.0666 3.33399 16.5999 3.33399 15.6665 3.33399L4.33317 3.33398C3.39975 3.33398 2.93304 3.33398 2.57652 3.51564C2.26292 3.67543 2.00795 3.9304 1.84816 4.244C1.6665 4.60052 1.6665 5.06723 1.6665 6.00065Z" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    },
    settings: {
        slugs: ["Settings"],
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none"><path d="M7.82936 16.1419L8.3164 17.2373C8.46118 17.5634 8.69747 17.8404 8.99659 18.0349C9.29571 18.2293 9.64483 18.3327 10.0016 18.3327C10.3583 18.3327 10.7075 18.2293 11.0066 18.0349C11.3057 17.8404 11.542 17.5634 11.6868 17.2373L12.1738 16.1419C12.3472 15.7533 12.6388 15.4292 13.0071 15.216C13.3778 15.0022 13.8066 14.9111 14.2321 14.9558L15.4238 15.0827C15.7785 15.1202 16.1365 15.054 16.4544 14.8921C16.7722 14.7302 17.0363 14.4796 17.2145 14.1706C17.393 13.8619 17.4781 13.5079 17.4593 13.1518C17.4406 12.7956 17.3189 12.4525 17.109 12.1642L16.4034 11.1947C16.1522 10.847 16.018 10.4284 16.0201 9.99935C16.02 9.57151 16.1555 9.15464 16.4071 8.80861L17.1127 7.83916C17.3226 7.55081 17.4443 7.20774 17.463 6.85158C17.4818 6.49541 17.3967 6.14147 17.2183 5.83268C17.04 5.52371 16.7759 5.27309 16.4581 5.11121C16.1402 4.94932 15.7822 4.88312 15.4275 4.92065L14.2358 5.0475C13.8103 5.09219 13.3815 5.00112 13.0108 4.78731C12.6418 4.57289 12.3501 4.24715 12.1775 3.85676L11.6868 2.76139C11.542 2.43532 11.3057 2.15828 11.0066 1.96385C10.7075 1.76942 10.3583 1.66596 10.0016 1.66602C9.64483 1.66596 9.29571 1.76942 8.99659 1.96385C8.69747 2.15828 8.46118 2.43532 8.3164 2.76139L7.82936 3.85676C7.6568 4.24715 7.36509 4.57289 6.99603 4.78731C6.62538 5.00112 6.19659 5.09219 5.77103 5.0475L4.57566 4.92065C4.22094 4.88312 3.86294 4.94932 3.54509 5.11121C3.22724 5.27309 2.96317 5.52371 2.78492 5.83268C2.60644 6.14147 2.52141 6.49541 2.54014 6.85158C2.55888 7.20774 2.68058 7.55081 2.89048 7.83916L3.59603 8.80861C3.84765 9.15464 3.98315 9.57151 3.98307 9.99935C3.98315 10.4272 3.84765 10.8441 3.59603 11.1901L2.89048 12.1595C2.68058 12.4479 2.55888 12.791 2.54014 13.1471C2.52141 13.5033 2.60644 13.8572 2.78492 14.166C2.96335 14.4748 3.22744 14.7253 3.54525 14.8872C3.86306 15.049 4.22096 15.1153 4.57566 15.0781L5.76733 14.9512C6.19288 14.9065 6.62167 14.9976 6.99233 15.2114C7.36277 15.4252 7.65583 15.751 7.82936 16.1419Z" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M10.0001 12.4993C11.3808 12.4993 12.5001 11.3801 12.5001 9.99935C12.5001 8.61864 11.3808 7.49935 10.0001 7.49935C8.61939 7.49935 7.5001 8.61864 7.5001 9.99935C7.5001 11.3801 8.61939 12.4993 10.0001 12.4993Z" stroke="#667085" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>'
    }
}

const updateHistory = (route) => {
    history = history.slice(0, ++currentHistoryIndex)
    history.push(route)
}

export const currentRouteDisplay = writable(routesDisplays.home)
export const currentPage = writable({component: NotFound, props: null})

export const setcurrentRouteDisplay = (routeName) => {
    currentRouteDisplay.set(routesDisplays[beautifulToSnakeCase(routeName)])
}

export const addSlugToCurrentRouteDisplay = (routeName, slug, index = 0) => {
    routeName = beautifulToSnakeCase(routeName)
    routesDisplays[routeName].slugs[index] = kebabToBeautifulCase(slug)
    currentRouteDisplay.set(routesDisplays[routeName])
}

export const navigate = async (path, props = null) => {
    currentPage.set({})
    let component = routes.find(r => r.path === path)?.component
    ! empty(component) && updateHistory({path: path, component: component, props: props});
    empty(component) ? await goto(path.startsWith("/") ? path : ("/" + path)) : currentPage.set({component: component, props: props})
}

export const refreshAndNavigate = async (path, props = null) => {
    await navigate("/")
    await navigate(path, props)
}

export const next = () => {
    if (currentHistoryIndex < (history.length - 1)) {
        currentPage.set(history[++currentHistoryIndex].component)
    }
}

export const prev = () => {
    if (currentHistoryIndex > 0) {
        currentPage.set(history[--currentHistoryIndex].component)
    }
}

export const navigateToDashboard = async () => {
    let roles = await getAuthenticatedUserRoles()
    if (! empty(roles)) {
        roles[0].name === "admin" ? await navigate("admin") :
        roles[0].name === "client" ? await navigate("client") :
        roles[0].name === "super_admin" ? await navigate("super-admin") :
        await navigate("signin")
    }
}